// 초기 설정 섹션 문서
export const initialSetupContents = {
  // 업비트 API 키 발급
  'initial-setup.upbit-api': {
    title: '업비트 API 키 발급',
    content: `
# 업비트 API 키 발급 가이드 🔑

## API 키란?

API 키는 프로그램이 회원님의 계정에 안전하게 접근할 수 있도록 하는 디지털 열쇠입니다.

## 발급 절차

### 1단계: 업비트 로그인
1. [업비트 홈페이지](https://upbit.com) 접속
2. 로그인 (카카오 간편 로그인 가능)
3. 2단계 인증 완료

### 2단계: Open API 관리 페이지
1. 우측 상단 프로필 클릭
2. **[마이페이지]** 선택
3. 좌측 메뉴에서 **[Open API 관리]** 클릭

### 3단계: 새 API 키 생성
1. **[새 Open API 키 생성]** 버튼 클릭
2. 자동매매용 이름 입력 (예: "AI Trading Bot")
3. IP 주소 설정

### 4단계: 권한 설정 ⚠️ 중요

필요한 권한만 체크하세요:

\`\`\`yaml
필수 권한:
✅ 계좌 조회 (Account Inquiry)
✅ 주문 조회 (Order Inquiry)  
✅ 주문하기 (Order)

불필요한 권한:
❌ 출금하기 (Withdrawal) - 절대 체크 금지!
❌ 입금 주소 생성 (Deposit Address)
\`\`\`

### 5단계: 보안 설정

**IP 화이트리스트 설정**:
- 고정 IP 사용 시: 해당 IP만 등록
- 동적 IP 사용 시: 신중히 고려

**특정 코인만 거래 제한** (선택사항):
- BTC, ETH 등 주요 코인만 선택
- 실수로 인한 다른 코인 거래 방지

### 6단계: API 키 저장

생성 완료 시 표시되는 정보:
1. **Access Key**: 공개 키
2. **Secret Key**: 비밀 키 (한 번만 표시!)

⚠️ **중요**: Secret Key는 생성 시 한 번만 보여집니다!
- 안전한 곳에 복사해두세요
- 절대 타인과 공유하지 마세요

## 프로그램에 입력하기

### API 키 입력 방법
1. 프로그램 실행
2. 설정 → API 설정
3. Upbit 섹션에 입력:
   - Access Key: 복사한 Access Key 붙여넣기
   - Secret Key: 복사한 Secret Key 붙여넣기
4. [연결 테스트] 클릭
5. "연결 성공" 메시지 확인

## 보안 주의사항 🔒

### DO's ✅
- 프로그램 전용 API 키 생성
- 최소 필요 권한만 부여
- 정기적으로 키 재발급
- IP 제한 설정

### DON'Ts ❌
- 출금 권한 부여
- API 키 공유
- 공개된 장소에 저장
- 메신저로 전송

## 문제 해결

### "Invalid API Key" 오류
- Access/Secret Key 재확인
- 공백 문자 포함 여부 확인
- 키 활성화 상태 확인

### "IP not allowed" 오류
- IP 화이트리스트 설정 확인
- 현재 IP 주소 확인 후 추가

### "Insufficient permissions" 오류
- API 권한 설정 재확인
- 필수 권한 모두 체크되었는지 확인

## API 키 관리 팁

### 정기 교체
- 3-6개월마다 새 키로 교체
- 이상 활동 감지 시 즉시 교체

### 모니터링
- 업비트 API 사용 내역 정기 확인
- 비정상적인 요청 확인

### 백업
- 키 정보 안전하게 백업
- 암호화된 저장소 사용

💡 **Tip**: API 키는 은행 공인인증서처럼 소중히 관리하세요!
    `,
  },

  // Claude API 키 발급
  'initial-setup.claude-api': {
    title: 'Claude API 키 발급',
    content: `
# Claude API 키 발급 가이드 🤖

## Claude AI란?

Claude는 Anthropic사의 최신 AI 모델로, 시장 분석과 거래 신호 생성을 담당합니다.

## 계정 생성

### 1단계: Anthropic Console 가입
1. [console.anthropic.com](https://console.anthropic.com) 접속
2. **[Sign up]** 클릭
3. 이메일 인증 완료

### 2단계: 계정 설정
1. 조직명 입력 (개인도 가능)
2. 사용 목적 선택: "Personal Use"
3. 약관 동의

## API 키 발급

### 1단계: API Keys 메뉴
1. 좌측 메뉴에서 **[API Keys]** 클릭
2. **[Create Key]** 버튼 클릭

### 2단계: 키 생성
1. 키 이름 입력 (예: "Upbit Trading")
2. **[Create]** 클릭
3. 생성된 키 복사

⚠️ **주의**: API 키는 한 번만 표시됩니다!

## 크레딧 충전

### 요금제 선택

\`\`\`yaml
추천 플랜:
- Starter: $20/월 (개인 사용자)
- Growth: $100/월 (액티브 트레이더)
- Scale: 사용량 기반 (전문가)

예상 사용량:
- 일반 사용: $10-20/월
- 활발한 거래: $30-50/월
\`\`\`

### 결제 방법
1. **[Billing]** 메뉴 클릭
2. 결제 카드 등록
3. 자동 충전 설정 (권장)

### 사용량 모니터링
- 일일 사용량 확인
- 월별 한도 설정
- 알림 설정

## 프로그램 설정

### API 키 입력
1. 설정 → API 설정
2. Claude AI 섹션
3. API Key 붙여넣기
4. [연결 테스트] 클릭

### 모델 선택
\`\`\`yaml
사용 가능 모델:
- Claude 3 Opus: 최고 성능 (추천)
- Claude 3 Sonnet: 균형잡힌 선택
- Claude 3 Haiku: 경제적 옵션
\`\`\`

## 비용 최적화 팁

### 효율적 사용법

1. **분석 주기 조정**
   - 기본: 60초
   - 절약: 120초
   - 변동성 높을 때만 빠르게

2. **선택적 분석**
   - 주요 코인만 AI 분석
   - 나머지는 기술적 지표만

3. **캐싱 활용**
   - 반복 질문 최소화
   - 스마트 쿼리 설계

### 예상 비용

\`\`\`yaml
거래 스타일별 월 예상 비용:
- 보수적 (1-2 코인): $10-15
- 일반적 (3-5 코인): $20-30
- 활발함 (5+ 코인): $40-60

계산 기준:
- 코인당 일 1,000회 분석
- 모델: Claude 3 Sonnet
\`\`\`

## 문제 해결

### "Invalid API Key" 오류
- 키 앞뒤 공백 확인
- 올바른 키인지 재확인
- 새 키 생성 시도

### "Rate Limit" 오류
- 요청 빈도 줄이기
- 상위 플랜 고려
- 분석 주기 늘리기

### "Insufficient Credits" 오류
- 크레딧 잔액 확인
- 자동 충전 설정
- 사용량 최적화

## 보안 관리

### API 키 보호
- 환경 변수 사용
- 로컬 저장만
- 정기 교체 (3개월)

### 사용량 감시
- 비정상 사용 알림
- 일일 한도 설정
- IP 제한 고려

## 고급 설정

### 프롬프트 최적화
프로그램이 자동으로 최적화하지만 조정 가능:
- 분석 깊이
- 응답 길이
- 특수 지시사항

### 백업 모델
메인 모델 장애 시:
1. 자동 폴백 설정
2. 대체 모델 지정
3. 오프라인 모드

💡 **Tip**: 처음엔 적은 크레딧으로 시작해 사용 패턴을 파악하세요!
    `,
  },

  // API 권한 설정
  'initial-setup.api-permissions': {
    title: 'API 권한 설정',
    content: `
# API 권한 설정 가이드 🔐

## 권한 설정의 중요성

API 권한은 프로그램이 수행할 수 있는 작업을 제한합니다. 올바른 권한 설정은 보안의 첫걸음입니다.

## Upbit API 권한 상세

### 필수 권한 ✅

#### 1. 계좌 조회 (Account Inquiry)
\`\`\`yaml
용도:
- 잔고 확인
- 보유 코인 조회
- 계좌 상태 확인

위험도: 낮음
\`\`\`

#### 2. 주문 조회 (Order Inquiry)
\`\`\`yaml
용도:
- 체결 내역 확인
- 미체결 주문 조회
- 주문 상태 추적

위험도: 낮음
\`\`\`

#### 3. 주문하기 (Order)
\`\`\`yaml
용도:
- 매수/매도 주문
- 주문 취소
- 정정 주문

위험도: 중간
주의: 실제 거래 발생!
\`\`\`

### 금지 권한 ❌

#### 출금하기 (Withdrawal)
\`\`\`yaml
절대 허용 금지!
이유:
- 자산 외부 이동 가능
- 해킹 시 피해 극대화
- 자동매매에 불필요
\`\`\`

## 권한별 리스크 매트릭스

\`\`\`
권한 유형        | 필요성 | 위험도 | 설정
----------------|--------|--------|-------
계좌 조회       | 필수   | 낮음   | ✅
주문 조회       | 필수   | 낮음   | ✅
주문하기        | 필수   | 중간   | ✅
출금하기        | 불필요 | 극높음 | ❌
입금 주소 생성  | 불필요 | 낮음   | ❌
\`\`\`

## IP 화이트리스트 설정

### 고정 IP 환경

\`\`\`yaml
추천 설정:
1. 현재 IP 확인: whatismyip.com
2. 해당 IP만 등록
3. 변경 시 즉시 업데이트

장점:
- 최고 수준 보안
- 외부 접근 차단
\`\`\`

### 동적 IP 환경

\`\`\`yaml
대안:
1. VPN 사용 (고정 IP)
2. IP 대역 등록
3. 클라우드 서버 활용

주의:
- 보안 수준 하락
- 추가 모니터링 필요
\`\`\`

## 거래 제한 설정

### 코인별 제한

\`\`\`yaml
설정 방법:
1. API 편집 페이지
2. "거래 가능 마켓" 섹션
3. 원하는 코인만 선택

추천:
- BTC, ETH 등 주요 코인
- 실제 거래할 코인만
\`\`\`

### 금액 제한

업비트는 API 레벨 금액 제한 미지원
→ 프로그램에서 자체 제한 설정

\`\`\`yaml
프로그램 설정:
- 일일 최대 거래액
- 코인별 최대 보유액
- 단일 주문 최대 금액
\`\`\`

## 2단계 인증 (2FA)

### 설정 방법

1. **Google OTP 앱 설치**
   - Android: Google Authenticator
   - iOS: Google Authenticator

2. **업비트 2FA 활성화**
   - 보안 설정 → 2단계 인증
   - QR 코드 스캔
   - 백업 코드 저장

3. **API 생성 시 2FA 필수**
   - API 키 생성/수정 시
   - OTP 코드 입력 필요

### 프로그램 2FA 지원

\`\`\`yaml
자동 2FA 기능:
- TOTP 시드 저장 (암호화)
- 자동 코드 생성
- API 호출 시 자동 입력

설정:
1. 설정 → 보안
2. 2FA 시드 입력
3. 테스트 실행
\`\`\`

## 권한 감사 및 모니터링

### 정기 점검 사항

\`\`\`yaml
일일 점검:
- API 사용 로그
- 비정상 요청
- 실패한 시도

주간 점검:
- 권한 설정 확인
- IP 접근 기록
- 거래 패턴 분석
\`\`\`

### 이상 징후 대응

\`\`\`yaml
즉시 조치 필요:
1. 미인가 IP 접근
2. 대량 주문 시도
3. 새벽 시간 활동
4. 연속된 실패

대응 방법:
1. API 키 즉시 비활성화
2. 새 키 발급
3. 거래 내역 확인
4. 비밀번호 변경
\`\`\`

## 권한 최소화 원칙

### 단계별 접근

\`\`\`yaml
1단계 (테스트):
- 읽기 권한만
- 소액 테스트

2단계 (시뮬레이션):
- 거래 권한 추가
- IP 제한 엄격

3단계 (실거래):
- 필요 권한만
- 모니터링 강화
\`\`\`

### 멀티 API 전략

\`\`\`yaml
읽기 전용 API:
- 시장 데이터
- 계좌 조회
- 분석용

거래 전용 API:
- 주문 실행만
- 엄격한 IP 제한
- 짧은 유효기간
\`\`\`

## 보안 체크리스트

### 초기 설정 시
- [ ] 출금 권한 미포함 확인
- [ ] IP 화이트리스트 설정
- [ ] 2FA 활성화
- [ ] 거래 코인 제한
- [ ] API 키 안전 저장

### 정기 점검 (월간)
- [ ] API 사용 로그 검토
- [ ] 권한 설정 재확인
- [ ] IP 리스트 업데이트
- [ ] 비정상 활동 확인
- [ ] API 키 교체 검토

💡 **Golden Rule**: 필요한 최소 권한만 부여하고, 정기적으로 검토하세요!
    `,
  },

  // 보안 주의사항
  'initial-setup.security': {
    title: '보안 주의사항',
    content: `
# 보안 주의사항 🛡️

## 보안의 중요성

자동매매 시스템은 24시간 작동하므로 보안이 매우 중요합니다. 작은 실수가 큰 손실로 이어질 수 있습니다.

## API 키 보안

### 절대 하지 말아야 할 것 ❌

\`\`\`yaml
위험한 행동:
❌ API 키를 메신저로 전송
❌ 이메일로 공유
❌ 클라우드 메모에 저장
❌ 공개 저장소에 업로드
❌ 화면 캡처에 포함
❌ 타인과 공유
\`\`\`

### 안전한 관리 방법 ✅

\`\`\`yaml
권장 사항:
✅ 프로그램에만 입력
✅ 로컬 암호화 저장
✅ 정기적 키 교체
✅ 접근 로그 모니터링
✅ 백업은 암호화하여
\`\`\`

## PC 보안

### 필수 보안 소프트웨어

1. **안티바이러스**
   - Windows Defender (기본)
   - 실시간 감시 활성화
   - 정기 검사 설정

2. **방화벽**
   - Windows 방화벽 ON
   - 프로그램 예외 등록
   - 인바운드 규칙 설정

3. **안티 키로거**
   - 키보드 입력 보호
   - 화면 캡처 방지

### 시스템 보안 설정

\`\`\`yaml
Windows 보안:
- 자동 로그인 해제
- 화면 보호기 암호
- BitLocker 암호화
- 원격 데스크톱 제한

네트워크 보안:
- 공용 WiFi 사용 금지
- VPN 사용 고려
- 라우터 보안 설정
- HTTPS만 사용
\`\`\`

## 계정 보안

### 업비트 계정

\`\`\`yaml
필수 설정:
✅ 2단계 인증 (OTP)
✅ 로그인 알림
✅ 출금 주소 등록제
✅ 로그인 IP 제한

추가 보안:
- 로그인 비밀번호 복잡도 상승
- 정기적 비밀번호 변경
- 생체 인증 활용
\`\`\`

### 프로그램 계정

\`\`\`yaml
보안 설정:
- 프로그램 시작 암호
- 설정 변경 시 인증
- 자동 로그아웃
- 활동 로그 기록
\`\`\`

## 거래 보안

### 금액 제한 설정

\`\`\`yaml
안전장치:
1. 일일 최대 거래액: 전체 자산의 50%
2. 단일 거래 최대액: 전체 자산의 10%
3. 손실 한도: -5% 자동 정지
4. 연속 손실: 3회 시 일시정지
\`\`\`

### 비상 정지 (Kill Switch)

\`\`\`yaml
자동 발동 조건:
- 급격한 손실 발생
- API 오류 지속
- 비정상 거래 패턴
- 시스템 이상 감지

수동 발동:
- 단축키: Ctrl+Shift+K
- 모바일 알림 버튼
- 웹 대시보드
\`\`\`

## 물리적 보안

### PC 접근 통제

\`\`\`yaml
기본 원칙:
- 전용 PC 사용 권장
- 물리적 잠금 장치
- BIOS 암호 설정
- USB 포트 비활성화
\`\`\`

### 백업 보안

\`\`\`yaml
백업 전략:
- 암호화된 외장 드라이브
- 금고 보관
- 클라우드 백업 암호화
- 정기적 백업 테스트
\`\`\`

## 소셜 엔지니어링 방어

### 피싱 공격 대응

\`\`\`yaml
주의할 피싱 유형:
1. 가짜 업비트 이메일
2. 보안 업데이트 사칭
3. 지원팀 사칭
4. 투자 정보 미끼

대응 방법:
- 발신자 확인
- 링크 직접 입력
- 전화 확인
- 의심시 무시
\`\`\`

### 정보 보호

\`\`\`yaml
공개하지 말아야 할 정보:
❌ 투자 금액
❌ 수익률
❌ 거래 전략
❌ API 설정
❌ 프로그램 버전
\`\`\`

## 모니터링 및 감사

### 실시간 모니터링

\`\`\`yaml
확인 항목:
- API 사용 로그
- 로그인 기록
- 거래 내역
- 시스템 리소스

알림 설정:
- 대량 거래
- 연속 손실
- 로그인 시도
- API 오류
\`\`\`

### 정기 보안 점검

\`\`\`yaml
일일 점검:
□ 거래 내역 확인
□ 계좌 잔고 대조
□ 이상 활동 확인

주간 점검:
□ API 로그 분석
□ 보안 업데이트
□ 백업 상태 확인

월간 점검:
□ API 키 교체
□ 비밀번호 변경
□ 보안 설정 검토
\`\`\`

## 사고 대응 계획

### 해킹 의심 시

\`\`\`yaml
즉시 조치:
1. API 키 비활성화
2. 모든 거래 중지
3. 계정 비밀번호 변경
4. 거래 내역 확인
5. 업비트 신고

후속 조치:
- 시스템 포맷
- 전체 보안 점검
- 새 API 키 발급
- 피해 규모 파악
\`\`\`

### 복구 절차

\`\`\`yaml
단계별 복구:
1. 클린 시스템 준비
2. 프로그램 재설치
3. 새 API 키 설정
4. 최소 금액 테스트
5. 단계적 정상화
\`\`\`

## 보안 베스트 프랙티스

### DO's ✅
- 정기적인 보안 교육
- 최신 보안 패치 적용
- 다중 보안 계층 구축
- 정기적인 백업
- 최소 권한 원칙

### DON'Ts ❌
- 보안 경고 무시
- 동일 비밀번호 사용
- 공용 PC 사용
- 의심스러운 링크 클릭
- 보안 설정 비활성화

💡 **Remember**: 보안은 일회성이 아닌 지속적인 과정입니다!
    `,
  },

  // 2단계 인증 설정
  'initial-setup.2fa-setup': {
    title: '2단계 인증 설정',
    content: `
# 2단계 인증(2FA) 설정 가이드 🔐

## 2FA란?

2단계 인증은 비밀번호 외에 추가 인증 수단을 사용하여 계정을 보호하는 보안 기능입니다.

## 2FA의 중요성

\`\`\`yaml
보안 강화 효과:
- 비밀번호 유출 시에도 계정 보호
- 99.9% 해킹 시도 차단
- 실시간 접근 알림
- 금융 거래 필수 요소
\`\`\`

## 업비트 2FA 설정

### 1단계: OTP 앱 설치

**추천 앱**:
- Google Authenticator (가장 보편적)
- Microsoft Authenticator
- Authy (백업 기능)

**설치 방법**:
1. 스마트폰 앱 스토어 접속
2. "Google Authenticator" 검색
3. 설치 및 실행

### 2단계: 업비트 2FA 활성화

1. **업비트 로그인**
2. **[마이페이지] → [보안 설정]**
3. **[2단계 인증] → [설정하기]**
4. **본인 인증** (휴대폰/이메일)

### 3단계: OTP 연결

\`\`\`yaml
QR 코드 방식:
1. OTP 앱에서 [+] 버튼
2. [QR 코드 스캔] 선택
3. 업비트 QR 코드 스캔
4. 6자리 코드 입력

수동 입력 방식:
1. [수동으로 입력] 선택
2. 계정명: Upbit
3. 키: 화면의 문자열 입력
\`\`\`

### 4단계: 백업 코드 저장

⚠️ **매우 중요**:
- 10개의 백업 코드 제공
- 스마트폰 분실 시 필수
- 안전한 곳에 보관
- 절대 타인과 공유 금지

## 프로그램 자동 2FA 설정

### TOTP 시드 추출

\`\`\`yaml
주의사항:
- 고급 사용자만 권장
- 보안 위험 인지 필요
- 시드 유출 시 2FA 무력화
\`\`\`

### 설정 방법

1. **설정 → 보안 → 자동 2FA**
2. **TOTP 시드 입력**
   - QR 코드의 secret 값
   - 32자리 Base32 문자열
3. **테스트 인증**
4. **암호화 저장**

### 자동 2FA 작동 원리

\`\`\`python
# 프로그램 내부 작동
def generate_otp(seed):
    current_time = int(time.time() / 30)
    otp = TOTP(seed, current_time)
    return otp  # 6자리 코드

# API 호출 시 자동 적용
api_request(otp=generate_otp())
\`\`\`

## Claude API 2FA

### 설정 방법

Claude는 계정 레벨 2FA 지원:
1. **Account Settings**
2. **Security**
3. **Enable 2FA**
4. **OTP 앱 연결**

### API 키와 2FA

- API 키는 2FA 영향 없음
- 콘솔 접근 시만 필요
- API 키 자체가 인증 수단

## 2FA 관리 베스트 프랙티스

### 백업 전략

\`\`\`yaml
다중 백업:
1. 백업 코드 인쇄 → 금고
2. 암호화 파일 → USB
3. 다른 기기에 OTP 복사
4. 가족에게 복구 방법 공유
\`\`\`

### 기기 관리

\`\`\`yaml
권장사항:
- 전용 스마트폰 사용
- 자동 잠금 설정
- 생체 인증 활성화
- 정기적 앱 업데이트
\`\`\`

## 문제 해결

### OTP 코드 불일치

**원인과 해결**:
1. **시간 동기화 문제**
   - 폰 시간 설정 확인
   - 자동 시간 설정 ON
   
2. **잘못된 계정**
   - OTP 앱에서 계정 확인
   - Upbit 계정 선택

3. **30초 경계**
   - 새 코드 생성 대기
   - 중간 시점에 입력

### 스마트폰 분실

**복구 절차**:
1. 백업 코드 사용
2. 업비트 로그인
3. 2FA 재설정
4. 새 기기 등록

### 백업 코드 분실

**대응 방법**:
1. 고객센터 문의
2. 신분 확인 절차
3. 계정 복구 신청
4. 2-3일 소요

## 고급 보안 설정

### 하드웨어 키 사용

\`\`\`yaml
YubiKey 같은 하드웨어:
- 최고 수준 보안
- 물리적 소유 필수
- 복제 불가능
- 기업용 권장
\`\`\`

### 시간 기반 제한

\`\`\`yaml
추가 보안:
- 거래 가능 시간 설정
- 야간 거래 2FA 강화
- 주말 추가 인증
\`\`\`

## 2FA 사용 시 주의사항

### DO's ✅
- 정기적 백업 코드 확인
- OTP 앱 정기 업데이트
- 여러 기기에 백업
- 시드/백업 코드 암호화

### DON'Ts ❌
- 스크린샷으로 QR 저장
- 클라우드에 시드 저장
- 타인과 OTP 공유
- 루팅/탈옥 폰 사용

## 2FA 통계

\`\`\`yaml
보안 효과:
- 계정 탈취: 99.9% 방지
- 평균 복구 시간: 10분
- 사용자 만족도: 95%

사용 현황:
- 업비트 사용자 80% 활성화
- 해킹 피해 0.01% 미만
\`\`\`

💡 **Pro Tip**: 2FA는 약간의 불편함으로 큰 보안을 얻는 최고의 투자입니다!
    `,
  },
};