// 화면 구성 섹션 문서
export const interfaceContents = {
  // 대시보드 가이드
  'interface.dashboard': {
    title: '대시보드 가이드',
    content: `
# 대시보드 가이드 📊

## 대시보드 개요

대시보드는 프로그램의 핵심 정보를 한눈에 볼 수 있는 중앙 통제실입니다.

## 주요 구성 요소

### 1. 상단 요약 패널
\`\`\`yaml
총 자산 현황:
  - 현재 평가액
  - 일일 손익
  - 손익률 (%)
  - 전일 대비

실시간 지표:
  - 프로그램 상태
  - API 연결 상태
  - 마지막 업데이트
  - 활성 전략 수
\`\`\`

### 2. 포트폴리오 차트
**원형 차트 (Pie Chart)**
- 코인별 비중 시각화
- 실시간 업데이트
- 호버 시 상세 정보
- 클릭으로 상세 페이지

**색상 구분**
\`\`\`
BTC: 주황색 (#F7931A)
ETH: 보라색 (#627EEA)
USDT: 초록색 (#26A17B)
기타: 자동 할당
\`\`\`

### 3. 수익률 추이 그래프
\`\`\`yaml
표시 옵션:
  - 1일 / 1주 / 1개월 / 3개월 / 전체
  - 라인 차트 / 캔들 차트
  - 벤치마크 비교 (BTC)
  
상호작용:
  - 줌 인/아웃
  - 특정 구간 선택
  - 데이터 포인트 상세
\`\`\`

### 4. 실시간 거래 내역
\`\`\`yaml
표시 정보:
  시간 | 코인 | 유형 | 수량 | 가격 | 총액 | 상태
  
색상 코드:
  - 매수: 빨간색
  - 매도: 파란색
  - 체결: 진한 색
  - 대기: 연한 색
\`\`\`

### 5. 활성 전략 모니터
\`\`\`yaml
전략별 카드:
  - 전략명
  - 활성 상태
  - 현재 포지션
  - 수익률
  - 다음 액션

상태 표시:
  🟢 활성
  🟡 대기
  🔴 중지
  ⚪ 비활성
\`\`\`

## 상세 기능

### 실시간 업데이트
\`\`\`javascript
// 업데이트 주기
{
  가격: 1초,
  차트: 5초,
  거래내역: 즉시,
  통계: 10초
}

// 성능 최적화
- 변경된 데이터만 업데이트
- 가상 DOM 사용
- 웹 워커 활용
\`\`\`

### 커스터마이징
\`\`\`yaml
레이아웃 변경:
  - 위젯 드래그 & 드롭
  - 크기 조절
  - 접기/펼치기
  - 위치 저장

표시 설정:
  - 통화 단위 (KRW/USD)
  - 소수점 자리
  - 시간대
  - 언어
\`\`\`

### 알림 센터
\`\`\`yaml
알림 유형:
  긴급: 빨간색 배경, 소리
  중요: 노란색 배경
  정보: 파란색 배경
  성공: 초록색 배경

표시 위치:
  - 우측 상단 팝업
  - 하단 토스트
  - 중앙 모달
\`\`\`

## 대시보드 활용 팁

### 효율적인 모니터링
1. **핵심 지표 우선 배치**
   - 총 자산
   - 일일 수익률
   - 주요 포지션

2. **알림 필터링**
   - 중요 이벤트만 팝업
   - 나머지는 로그 확인

3. **멀티 모니터 활용**
   - 메인: 대시보드
   - 서브: 차트/뉴스

### 빠른 조작
\`\`\`yaml
단축키:
  F5: 새로고침
  Space: 일시정지
  S: 설정
  T: 거래 내역
  P: 포트폴리오
  
  Ctrl+1~9: 위젯 전환
  Ctrl+D: 대시보드 홈
\`\`\`

## 성능 지표

### 시스템 모니터링
\`\`\`yaml
CPU 사용률:
  - 차트로 표시
  - 경고: 80% 이상
  - 최적: 50% 이하

메모리 사용:
  - 실시간 추적
  - 가비지 컬렉션
  - 메모리 누수 감지

네트워크:
  - API 응답 시간
  - 패킷 손실
  - 대역폭 사용
\`\`\`

### 거래 통계
\`\`\`yaml
일일 통계:
  - 총 거래 횟수
  - 승률
  - 평균 수익
  - 최대 이익/손실

누적 통계:
  - 총 수익률
  - 샤프 비율
  - 최대 낙폭
  - 회복 기간
\`\`\`

## 문제 해결

### 데이터 불일치
- 새로고침 (F5)
- 캐시 정리
- API 재연결

### 느린 업데이트
- 불필요 위젯 제거
- 업데이트 주기 조정
- 하드웨어 가속 활성화

### 차트 오류
- 시간대 설정 확인
- 데이터 소스 점검
- 브라우저 콘솔 확인

## 대시보드 프리셋

### 초보자용
\`\`\`yaml
구성:
  - 큰 포트폴리오 차트
  - 단순 수익률 그래프
  - 주요 알림만
  - 도움말 위젯
\`\`\`

### 트레이더용
\`\`\`yaml
구성:
  - 멀티 차트
  - 상세 거래 내역
  - 기술 지표 패널
  - 빠른 주문 위젯
\`\`\`

### 분석가용
\`\`\`yaml
구성:
  - 통계 대시보드
  - 상관관계 매트릭스
  - 백테스트 결과
  - 성과 분석
\`\`\`

💡 **Tip**: 대시보드는 거울입니다. 자주 보고 빠르게 대응하세요!
    `,
  },

  // 포트폴리오 관리
  'interface.portfolio': {
    title: '포트폴리오 관리',
    content: `
# 포트폴리오 관리 💼

## 포트폴리오 뷰 개요

포트폴리오 관리 화면은 자산 현황과 성과를 종합적으로 분석하고 관리하는 공간입니다.

## 주요 화면 구성

### 1. 자산 요약 테이블
\`\`\`yaml
표시 항목:
  코인 | 보유수량 | 평균단가 | 현재가 | 평가금액 | 손익 | 수익률 | 비중

정렬 옵션:
  - 평가금액 (기본)
  - 수익률
  - 비중
  - 알파벳

색상 표시:
  - 수익: 빨간색
  - 손실: 파란색
  - 변동없음: 회색
\`\`\`

### 2. 포트폴리오 구성 차트
**도넛 차트**
\`\`\`yaml
기능:
  - 코인별 비중 시각화
  - 중앙에 총액 표시
  - 클릭으로 상세 정보
  - 애니메이션 전환

옵션:
  - 금액 기준 / 수량 기준
  - 상위 N개만 표시
  - 기타 항목 그룹화
\`\`\`

### 3. 성과 분석 패널
\`\`\`yaml
일간 성과:
  - 오늘 손익
  - 변동률
  - 최고/최저

주간 성과:
  - 7일 추이
  - 주간 최고 수익
  - 주간 최대 손실

월간 성과:
  - 월별 수익률
  - 누적 그래프
  - 벤치마크 비교
\`\`\`

### 4. 자산 히스토리
\`\`\`yaml
시계열 차트:
  - 총 자산 추이
  - 코인별 기여도
  - 입출금 표시
  - 주요 이벤트 마킹

기간 선택:
  - 1일 / 1주 / 1개월
  - 3개월 / 6개월 / 1년
  - 사용자 지정
\`\`\`

## 고급 기능

### 리밸런싱 도구
\`\`\`yaml
목표 포트폴리오:
  - 목표 비중 설정
  - 현재 vs 목표 비교
  - 필요 조정액 계산
  - 실행 계획 생성

자동 리밸런싱:
  - 주기 설정
  - 임계값 설정
  - 시뮬레이션
  - 실행 승인
\`\`\`

### 리스크 분석
\`\`\`yaml
VaR (Value at Risk):
  - 95% 신뢰구간
  - 일일 VaR
  - 포트폴리오 VaR

상관관계:
  - 코인 간 상관계수
  - 히트맵 표시
  - 분산 효과

변동성:
  - 개별 변동성
  - 포트폴리오 변동성
  - 샤프 비율
\`\`\`

### 수익 귀속 분석
\`\`\`python
# 수익 기여도 분해
총_수익 = Σ(코인별_수익)

코인별_기여도 = {
    'BTC': +3.2%,  # 전체 수익의 45%
    'ETH': +1.8%,  # 전체 수익의 25%
    'XRP': -0.5%,  # 전체 수익의 -7%
    '기타': +2.7%  # 전체 수익의 37%
}
\`\`\`

## 포트폴리오 도구

### 1. What-If 분석
\`\`\`yaml
시나리오 테스트:
  - "BTC가 10% 하락하면?"
  - "ETH 비중을 30%로 늘리면?"
  - "알트코인을 모두 정리하면?"

결과 표시:
  - 예상 손익
  - 리스크 변화
  - 최적 대응
\`\`\`

### 2. 세금 계산기
\`\`\`yaml
기능:
  - 실현 손익 계산
  - 세금 추정
  - 절세 전략
  - 보고서 생성

설정:
  - FIFO/LIFO 선택
  - 세율 입력
  - 공제 항목
\`\`\`

### 3. 백업 & 복원
\`\`\`yaml
백업:
  - 포트폴리오 스냅샷
  - 거래 내역
  - 설정 정보
  - 암호화 저장

복원:
  - 특정 시점으로
  - 선택적 복원
  - 검증 과정
\`\`\`

## 포트폴리오 전략

### 분산 투자 가이드
\`\`\`yaml
보수적 포트폴리오:
  - BTC: 40%
  - ETH: 30%
  - 스테이블: 20%
  - 기타: 10%

균형 포트폴리오:
  - BTC: 30%
  - ETH: 25%
  - 대형 알트: 25%
  - 중소형: 20%

공격적 포트폴리오:
  - BTC: 20%
  - ETH: 20%
  - 알트코인: 60%
\`\`\`

### 포트폴리오 최적화
\`\`\`python
def optimize_portfolio():
    # 현대 포트폴리오 이론
    returns = calculate_expected_returns()
    risks = calculate_risks()
    correlations = calculate_correlations()
    
    # 효율적 프론티어
    optimal_weights = find_optimal_weights(
        target_return=0.15,  # 15% 목표 수익
        max_risk=0.20       # 20% 최대 리스크
    )
    
    return optimal_weights
\`\`\`

## 모니터링 대시보드

### 실시간 모니터링
\`\`\`yaml
감시 항목:
  - 급격한 비중 변화
  - 목표 이탈
  - 집중도 위험
  - 상관관계 변화

알림 조건:
  - 단일 코인 40% 초과
  - 일일 변동 ±10%
  - 리밸런싱 필요
\`\`\`

### 성과 리포트
\`\`\`yaml
일일 리포트:
  - 수익률 요약
  - 주요 변동 사항
  - 내일 계획

주간 리포트:
  - 주간 성과 분석
  - 벤치마크 비교
  - 개선 제안

월간 리포트:
  - 상세 분석
  - 전략 평가
  - 차월 계획
\`\`\`

## 포트폴리오 관리 팁

### DO's ✅
- 정기적인 리뷰 (주 1회)
- 목표 비중 준수
- 리스크 분산
- 기록 유지
- 감정 배제

### DON'Ts ❌
- 과도한 집중
- 빈번한 조정
- FOMO 투자
- 손실 회피
- 단기 시각

## 고급 설정

### 커스텀 지표
\`\`\`yaml
사용자 정의 지표:
  - 커스텀 벤치마크
  - 특수 비율
  - 개인 목표
  - 제약 조건
\`\`\`

### API 연동
\`\`\`yaml
외부 연동:
  - 구글 시트
  - 세금 소프트웨어
  - 분석 도구
  - 백업 서비스
\`\`\`

💡 **Pro Tip**: 포트폴리오는 정원과 같습니다. 꾸준한 관리가 풍성한 수확을 만듭니다!
    `,
  },

  // 설정 화면 설명
  'interface.settings': {
    title: '설정 화면 설명',
    content: `
# 설정 화면 가이드 ⚙️

## 설정 메뉴 구조

설정은 탭 형식으로 구성되어 있으며, 각 탭은 특정 기능 영역을 담당합니다.

## 1. 일반 설정

### 기본 설정
\`\`\`yaml
언어 설정:
  - 한국어 (기본)
  - English
  - 日本語

통화 표시:
  - KRW (원)
  - USD (달러)
  - BTC (비트코인)

시간대:
  - 서울 (GMT+9)
  - 자동 감지
  - 수동 설정
\`\`\`

### 표시 설정
\`\`\`yaml
숫자 형식:
  - 소수점 자리: 2-8
  - 천 단위 구분
  - 과학적 표기법

날짜 형식:
  - YYYY-MM-DD
  - MM/DD/YYYY
  - DD/MM/YYYY

테마:
  - 라이트 모드
  - 다크 모드
  - 자동 전환
\`\`\`

## 2. API 설정

### Upbit API
\`\`\`yaml
입력 필드:
  - Access Key: [텍스트 입력]
  - Secret Key: [비밀번호 입력]

버튼:
  - [연결 테스트]: API 유효성 검사
  - [권한 확인]: 부여된 권한 표시
  - [저장]: 암호화 저장

상태 표시:
  🟢 연결됨: 정상 작동
  🟡 제한됨: 일부 권한 부족  
  🔴 오류: 연결 실패
\`\`\`

### Claude AI API
\`\`\`yaml
설정 항목:
  - API Key: [텍스트 입력]
  - 모델 선택: 
    * Claude 3 Opus
    * Claude 3 Sonnet
    * Claude 3 Haiku
  
  - 사용량 한도: $[숫자]/월
  - 분석 깊이: 간단/보통/상세

상태:
  - 현재 사용량
  - 남은 크레딧
  - 예상 소진일
\`\`\`

## 3. 거래 설정

### 전역 설정
\`\`\`yaml
기본 거래 설정:
  - 기본 투자금: [금액]
  - 최대 동시 포지션: [1-10]
  - 슬리피지 허용: [0.1-1%]
  - 수수료 계산: 포함/제외

안전 장치:
  - 일일 최대 거래액: [금액]
  - 일일 최대 거래 횟수: [횟수]
  - 연속 손실 한도: [횟수]
  - Kill Switch: ON/OFF
\`\`\`

### 매수/매도 조건
\`\`\`yaml
매수 설정:
  - 기본 신뢰도: [60-95%]
  - 분할 매수: ON/OFF
  - 분할 횟수: [2-5회]
  - 간격: [1-5%]

매도 설정:
  - 익절 목표: [3-20%]
  - 손절 기준: [-1 ~ -10%]
  - 트레일링 스톱: ON/OFF
  - 부분 매도: ON/OFF
\`\`\`

## 4. 전략 설정

### 기술적 지표
\`\`\`yaml
활성화할 지표:
  ☑ RSI (14)
  ☑ MACD (12, 26, 9)
  ☑ 볼린저밴드 (20, 2)
  ☑ 이동평균선
  ☐ 스토캐스틱
  ☐ ADX

가중치 설정:
  - RSI: [슬라이더 0-100%]
  - MACD: [슬라이더 0-100%]
  - BB: [슬라이더 0-100%]
  - 자동 최적화: ON/OFF
\`\`\`

### AI 분석
\`\`\`yaml
AI 설정:
  - 분석 주기: [30-300초]
  - 분석 깊이: 1-5
  - 뉴스 포함: ON/OFF
  - 소셜 분석: ON/OFF

비용 절감:
  - 캐시 사용: ON/OFF
  - 중요 이벤트만: ON/OFF
  - 야간 절약 모드: ON/OFF
\`\`\`

## 5. 코인별 설정

### 코인 추가/제거
\`\`\`yaml
거래 코인 목록:
  [+] 코인 추가
  
  BTC  [편집] [삭제]
  ETH  [편집] [삭제]
  XRP  [편집] [삭제]

코인별 설정:
  - 최대 투자금
  - 커스텀 전략
  - 거래 시간대
  - 특별 조건
\`\`\`

## 6. 알림 설정

### 알림 유형
\`\`\`yaml
거래 알림:
  ☑ 매수 체결
  ☑ 매도 체결
  ☑ 주문 실패
  ☐ 주문 대기

시스템 알림:
  ☑ API 오류
  ☑ 시스템 오류
  ☑ 일일 리포트
  ☐ 디버그 정보

가격 알림:
  ☑ 목표가 도달
  ☑ 급등/급락
  ☐ 변동성 증가
\`\`\`

### 알림 방법
\`\`\`yaml
알림 채널:
  ☑ 프로그램 내 팝업
  ☐ 윈도우 알림
  ☐ 이메일
  ☐ 텔레그램
  ☐ 디스코드

알림 시간:
  - 방해 금지: 23:00-07:00
  - 주말 알림: ON/OFF
  - 긴급만: ON/OFF
\`\`\`

## 7. 백업 & 보안

### 자동 백업
\`\`\`yaml
백업 설정:
  - 자동 백업: ON/OFF
  - 백업 주기: 일일/주간
  - 백업 위치: [경로 선택]
  - 보관 기간: 30일

백업 내용:
  ☑ 거래 내역
  ☑ 설정 정보
  ☑ 전략 설정
  ☑ API 키 (암호화)
\`\`\`

### 보안 설정
\`\`\`yaml
접근 제어:
  - 프로그램 암호: [설정]
  - 자동 잠금: [5-60분]
  - 2FA 인증: ON/OFF

암호화:
  - API 키 암호화: AES-256
  - 통신 암호화: TLS 1.3
  - 로컬 저장소: 암호화
\`\`\`

## 8. 고급 설정

### 성능 최적화
\`\`\`yaml
리소스 관리:
  - CPU 사용 제한: [50-100%]
  - 메모리 제한: [1-8GB]
  - 네트워크 대역폭: 무제한

로깅:
  - 로그 레벨: INFO/DEBUG
  - 로그 보관: [7-90일]
  - 로그 크기: [100MB-1GB]
\`\`\`

### 실험적 기능
\`\`\`yaml
베타 기능:
  ☐ 새로운 AI 모델
  ☐ 고급 차트 패턴
  ☐ 자동 전략 생성
  ☐ 소셜 트레이딩

주의: 실험적 기능은 
      불안정할 수 있습니다
\`\`\`

## 설정 관리

### 프로필 시스템
\`\`\`yaml
설정 프로필:
  - 보수적 투자자
  - 일반 투자자
  - 공격적 투자자
  - 사용자 정의

프로필 관리:
  [저장] [불러오기] [내보내기] [가져오기]
\`\`\`

### 설정 초기화
\`\`\`yaml
초기화 옵션:
  - 전체 초기화
  - 부분 초기화
    ☐ 일반 설정
    ☐ API 설정
    ☐ 거래 설정
    ☐ 전략 설정
\`\`\`

## 설정 팁

### 권장 설정 순서
1. API 키 입력 및 테스트
2. 기본 거래 금액 설정
3. 안전 장치 설정
4. 전략 선택 및 조정
5. 알림 설정
6. 백업 설정

### 주의사항
⚠️ API 키 변경 시 재연결 필요
⚠️ 전략 변경은 즉시 적용
⚠️ 백업 후 주요 변경 권장
⚠️ 실험적 기능 신중히 사용

💡 **Tip**: 설정은 한 번에 완벽할 필요 없습니다. 경험에 따라 조금씩 최적화하세요!
    `,
  },

  // TradingView 차트 활용
  'interface.charts': {
    title: 'TradingView 차트 활용',
    content: `
# TradingView 차트 활용 📈

## TradingView 차트 소개

프로그램에 내장된 TradingView 차트는 전문가 수준의 기술적 분석을 가능하게 합니다.

## 차트 기본 조작

### 확대/축소
\`\`\`yaml
마우스 휠:
  - 위로: 확대 (줌 인)
  - 아래로: 축소 (줌 아웃)

키보드:
  - +: 확대
  - -: 축소
  - 0: 전체 보기

터치:
  - 핀치: 확대/축소
  - 더블탭: 빠른 확대
\`\`\`

### 이동 및 스크롤
\`\`\`yaml
마우스:
  - 좌클릭 드래그: 차트 이동
  - 우클릭 드래그: 시간 이동

키보드:
  - ←/→: 시간 이동
  - ↑/↓: 가격 이동
  - Home/End: 처음/끝

스크롤바:
  - 하단: 시간 이동
  - 우측: 가격 이동
\`\`\`

## 차트 유형

### 1. 캔들스틱 차트
\`\`\`yaml
구성 요소:
  - 실체: 시가-종가
  - 그림자: 고가-저가
  - 색상: 상승(빨강), 하락(파랑)

정보 표시:
  - O: 시가 (Open)
  - H: 고가 (High)
  - L: 저가 (Low)
  - C: 종가 (Close)
  - V: 거래량 (Volume)
\`\`\`

### 2. 라인 차트
\`\`\`yaml
특징:
  - 종가 연결
  - 단순한 추세 파악
  - 노이즈 제거

사용 시기:
  - 장기 추세 분석
  - 지지/저항 확인
  - 패턴 인식
\`\`\`

### 3. 바 차트
\`\`\`yaml
구성:
  - 수직선: 고가-저가
  - 좌측 수평선: 시가
  - 우측 수평선: 종가

장점:
  - 공간 효율적
  - 정확한 가격 표시
  - 갭 확인 용이
\`\`\`

## 시간대 설정

### 시간 프레임
\`\`\`yaml
초단위:
  - 1초, 5초, 10초, 30초

분단위:
  - 1분, 3분, 5분, 15분, 30분, 45분

시간단위:
  - 1시간, 2시간, 3시간, 4시간

일단위:
  - 일봉, 주봉, 월봉
\`\`\`

### 시간대별 활용
\`\`\`yaml
스캘핑 (1-5분):
  - 빠른 진입/청산
  - 작은 가격 변동
  - 높은 정확도 필요

데이 트레이딩 (5분-1시간):
  - 일중 매매
  - 중간 변동폭
  - 기술적 신호 중시

스윙 (4시간-일봉):
  - 며칠간 보유
  - 큰 추세 활용
  - 노이즈 감소

포지션 (일봉-주봉):
  - 장기 보유
  - 주요 추세
  - 펀더멘털 결합
\`\`\`

## 그리기 도구

### 추세선
\`\`\`yaml
사용법:
  1. 도구 모음에서 추세선 선택
  2. 시작점 클릭
  3. 끝점 클릭
  4. 조정 가능

활용:
  - 지지/저항선
  - 채널
  - 추세 방향
\`\`\`

### 피보나치
\`\`\`yaml
도구 종류:
  - 되돌림 (Retracement)
  - 확장 (Extension)
  - 팬 (Fan)
  - 아크 (Arc)

주요 레벨:
  - 0.236 (23.6%)
  - 0.382 (38.2%)
  - 0.500 (50.0%)
  - 0.618 (61.8%)
  - 0.786 (78.6%)
\`\`\`

### 도형 및 텍스트
\`\`\`yaml
도형:
  - 사각형: 구간 표시
  - 원: 중요 영역
  - 삼각형: 패턴 표시

텍스트:
  - 메모 추가
  - 가격 목표
  - 전략 기록

아이콘:
  - 매수/매도 신호
  - 이벤트 표시
  - 경고 표시
\`\`\`

## 지표 추가

### 지표 검색
\`\`\`yaml
방법:
  1. 상단 'fx' 버튼 클릭
  2. 지표명 검색
  3. 더블클릭으로 추가

인기 지표:
  - Volume (거래량)
  - RSI
  - MACD
  - Bollinger Bands
  - Moving Average
\`\`\`

### 지표 설정
\`\`\`yaml
파라미터 조정:
  - 기간 변경
  - 색상 변경
  - 스타일 변경
  - 표시 위치

중첩 표시:
  - 같은 패널: 가격 관련
  - 별도 패널: 오실레이터
  - 투명도 조절
\`\`\`

### 커스텀 지표
\`\`\`javascript
// Pine Script 예시
//@version=5
indicator("내 지표", overlay=true)
sma20 = ta.sma(close, 20)
sma50 = ta.sma(close, 50)
plot(sma20, color=color.blue)
plot(sma50, color=color.red)

// 크로스 신호
bullish = ta.crossover(sma20, sma50)
bearish = ta.crossunder(sma20, sma50)
plotshape(bullish, style=shape.triangleup)
plotshape(bearish, style=shape.triangledown)
\`\`\`

## 차트 레이아웃

### 멀티 차트
\`\`\`yaml
레이아웃 옵션:
  - 단일 차트
  - 2분할 (가로/세로)
  - 4분할
  - 6분할
  - 사용자 정의

동기화:
  - 시간 동기화
  - 십자선 동기화
  - 그리기 도구 공유
\`\`\`

### 차트 저장
\`\`\`yaml
저장 옵션:
  - 레이아웃 저장
  - 템플릿 저장
  - 이미지 저장
  - 공유 링크

자동 저장:
  - 5분마다
  - 클라우드 동기화
  - 버전 관리
\`\`\`

## 고급 기능

### 알림 설정
\`\`\`yaml
알림 조건:
  - 가격 돌파
  - 지표 신호
  - 패턴 완성
  - 거래량 급증

알림 방식:
  - 팝업
  - 소리
  - 이메일
  - 웹훅
\`\`\`

### 백테스팅
\`\`\`yaml
전략 테스트:
  1. 전략 작성
  2. 과거 데이터 적용
  3. 성과 분석
  4. 최적화

결과 분석:
  - 수익률
  - 승률
  - 최대 낙폭
  - 샤프 비율
\`\`\`

### 리플레이 모드
\`\`\`yaml
기능:
  - 과거 차트 재생
  - 속도 조절
  - 일시정지/재생
  - 매매 연습

활용:
  - 전략 검증
  - 교육 목적
  - 심리 훈련
\`\`\`

## 단축키 모음

### 필수 단축키
\`\`\`
Alt + H: 수평선
Alt + V: 수직선
Alt + T: 추세선
Alt + F: 피보나치
Alt + R: 사각형

Ctrl + Z: 실행 취소
Ctrl + Y: 다시 실행
Delete: 선택 삭제
Esc: 도구 취소

Shift + 클릭: 여러 개 선택
Ctrl + A: 전체 선택
\`\`\`

## 차트 분석 팁

### 멀티 타임프레임
1. 상위 시간대로 큰 그림 파악
2. 중간 시간대로 진입 지점 찾기
3. 하위 시간대로 정확한 타이밍

### 지표 조합
- 추세 + 모멘텀 + 거래량
- 너무 많은 지표 지양 (3-4개)
- 상호 보완적 지표 선택

### 차트 패턴
- 패턴 완성 대기
- 거래량 확인
- 돌파 후 재테스트

💡 **Pro Tip**: 차트는 도구일 뿐입니다. 시장 맥락과 함께 해석하세요!
    `,
  },

  // 다크/라이트 모드
  'interface.dark-mode': {
    title: '다크/라이트 모드',
    content: `
# 다크/라이트 모드 설정 🌓

## 테마 모드 소개

프로그램은 사용자의 눈 건강과 선호도를 고려하여 다크 모드와 라이트 모드를 지원합니다.

## 모드별 특징

### 다크 모드 🌙
\`\`\`yaml
특징:
  - 어두운 배경 (#1a1a1a)
  - 밝은 텍스트 (#ffffff)
  - 낮은 대비 색상
  - 블루라이트 감소

장점:
  - 눈의 피로 감소
  - 야간 사용 적합
  - 배터리 절약 (OLED)
  - 집중력 향상

적합한 환경:
  - 어두운 실내
  - 야간 거래
  - 장시간 모니터링
  - 멀티 모니터 환경
\`\`\`

### 라이트 모드 ☀️
\`\`\`yaml
특징:
  - 밝은 배경 (#ffffff)
  - 어두운 텍스트 (#000000)
  - 선명한 대비
  - 전통적인 UI

장점:
  - 밝은 환경에서 가독성
  - 차트 디테일 명확
  - 인쇄 시 유리
  - 익숙한 인터페이스

적합한 환경:
  - 밝은 사무실
  - 주간 거래
  - 프레젠테이션
  - 문서 작업
\`\`\`

## 테마 전환 방법

### 수동 전환
\`\`\`yaml
방법 1 - 빠른 전환:
  - 우측 상단 테마 아이콘 클릭
  - 단축키: Ctrl + Shift + L

방법 2 - 설정에서:
  1. 설정 → 일반 → 테마
  2. 다크/라이트 선택
  3. 적용 클릭
\`\`\`

### 자동 전환
\`\`\`yaml
시간 기반:
  - 일출/일몰 시간
  - 사용자 정의 시간
  예: 07:00 라이트, 19:00 다크

시스템 연동:
  - OS 테마 따라가기
  - Windows/Mac/Linux 지원
  - 실시간 동기화
\`\`\`

## 색상 커스터마이징

### 다크 모드 커스텀
\`\`\`css
/* 사용자 정의 다크 테마 */
:root[data-theme="dark"] {
  --bg-primary: #0d0d0d;      /* 더 진한 배경 */
  --bg-secondary: #1a1a1a;
  --text-primary: #e0e0e0;    /* 부드러운 흰색 */
  --text-secondary: #999999;
  --accent: #00d4ff;          /* 강조 색상 */
  --success: #00ff88;
  --danger: #ff3366;
  --warning: #ffaa00;
}
\`\`\`

### 라이트 모드 커스텀
\`\`\`css
/* 사용자 정의 라이트 테마 */
:root[data-theme="light"] {
  --bg-primary: #ffffff;
  --bg-secondary: #f5f5f5;
  --text-primary: #333333;
  --text-secondary: #666666;
  --accent: #0066cc;
  --success: #00cc66;
  --danger: #cc0033;
  --warning: #cc9900;
}
\`\`\`

## 구성 요소별 테마

### 차트 테마
\`\`\`yaml
다크 모드 차트:
  - 배경: #0d1117
  - 그리드: #30363d
  - 캔들: 빨강/파랑 (한국식)
  - 지표: 네온 색상

라이트 모드 차트:
  - 배경: #ffffff
  - 그리드: #e0e0e0
  - 캔들: 빨강/파랑
  - 지표: 진한 색상
\`\`\`

### 대시보드 테마
\`\`\`yaml
다크 모드:
  - 카드: 어두운 회색 + 그림자
  - 테두리: 미묘한 밝은 선
  - 호버: 살짝 밝아짐
  - 그래프: 네온 효과

라이트 모드:
  - 카드: 흰색 + 그림자
  - 테두리: 연한 회색
  - 호버: 살짝 어두워짐
  - 그래프: 선명한 색상
\`\`\`

## 접근성 고려사항

### 색맹 지원
\`\`\`yaml
색맹 안전 팔레트:
  - 적록 색맹: 파랑/주황 사용
  - 청황 색맹: 빨강/초록 사용
  - 전색맹: 명도 차이 극대화

설정 위치:
  설정 → 접근성 → 색맹 모드
\`\`\`

### 고대비 모드
\`\`\`yaml
특징:
  - 극단적 명암 대비
  - 선명한 경계선
  - 큰 글꼴
  - 단순한 색상

활성화:
  설정 → 접근성 → 고대비
\`\`\`

## 성능 최적화

### 다크 모드 최적화
\`\`\`yaml
GPU 가속:
  - CSS 트랜지션 최소화
  - 그림자 효과 단순화
  - 애니메이션 감소

메모리 사용:
  - 어두운 이미지 캐싱
  - 리소스 프리로드
\`\`\`

### 전환 애니메이션
\`\`\`css
/* 부드러운 테마 전환 */
* {
  transition: background-color 0.3s ease,
              color 0.3s ease,
              border-color 0.3s ease;
}

/* 차트는 즉시 전환 */
.chart-container * {
  transition: none !important;
}
\`\`\`

## 사용자 경험 팁

### 눈 건강 보호
\`\`\`yaml
20-20-20 규칙:
  - 20분마다
  - 20피트(6m) 떨어진 곳을
  - 20초간 바라보기

추가 팁:
  - 모니터 밝기 조절
  - 블루라이트 필터
  - 적절한 조명
  - 규칙적인 휴식
\`\`\`

### 생산성 향상
\`\`\`yaml
시간대별 추천:
  오전: 라이트 모드 (집중력)
  오후: 자동 전환
  저녁: 다크 모드 (피로 감소)
  심야: 다크 + 블루라이트 차단

작업별 추천:
  분석: 라이트 모드
  모니터링: 다크 모드
  보고서: 라이트 모드
  장시간: 다크 모드
\`\`\`

## 문제 해결

### 테마 전환 오류
\`\`\`yaml
증상:
  - 일부만 변경됨
  - 깜빡임 발생
  - 저장 안 됨

해결:
  1. 브라우저 캐시 삭제
  2. 프로그램 재시작
  3. 설정 초기화
  4. 그래픽 드라이버 업데이트
\`\`\`

### 색상 이상
\`\`\`yaml
확인 사항:
  - 모니터 색상 프로필
  - 야간 모드 비활성화
  - 색온도 설정
  - HDR 설정
\`\`\`

## 고급 설정

### 테마 스케줄러
\`\`\`javascript
// 자동 테마 전환 설정
const themeSchedule = {
  weekday: {
    light: "07:00",
    dark: "18:00"
  },
  weekend: {
    light: "09:00",
    dark: "20:00"
  },
  special: {
    trading_hours: "light",
    after_hours: "dark"
  }
};
\`\`\`

### 커스텀 프리셋
\`\`\`yaml
프리셋 저장:
  1. 현재 테마 커스터마이징
  2. "프리셋으로 저장" 클릭
  3. 이름 지정
  4. 공유 가능

제공 프리셋:
  - Midnight Blue (진한 파랑)
  - Forest Green (진한 초록)
  - Sunset Orange (따뜻한 색조)
  - Paper White (순백색)
\`\`\`

💡 **Pro Tip**: 거래 환경과 시간대에 맞는 테마를 사용하면 피로도를 크게 줄일 수 있습니다!
    `,
  },
};